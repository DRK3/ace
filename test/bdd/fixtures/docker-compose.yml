#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:
  gatekeeper.trustbloc.local:
    container_name: gatekeeper.trustbloc.local
    image: ${GATEKEEPER_SERVER_IMAGE}:latest
    environment:
      - GK_HOST_URL=0.0.0.0:9014
      - GK_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - GK_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - GK_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.trustbloc.local:27017
      - DATABASE_PREFIX=gatekeeper_
      - GK_VAULT_SERVER_URL=https://vault.trustbloc.local:${VAULT_SERVER_PORT}
      - GK_VC_ISSUER_URL=http://vc-issuer.trustbloc.local:${ISSUER_VC_PORT}/vc-issuer-gk
      - GK_BLOC_DOMAIN=orb.trustbloc.local
      - GK_VC_REQUEST_TOKENS=vcs_issuer=vcs_issuer_rw_token
      - LOG_LEVEL=debug
    ports:
      - "9014:9014"
    volumes:
      - ./keys/tls:/etc/tls
    command: start
    depends_on:
      - mongodb.trustbloc.local
      - did-resolver.trustbloc.local
      - vc-issuer.trustbloc.local
    networks:
      - bdd_net

  vault.trustbloc.local:
    container_name: vault.trustbloc.local
    image: ${VAULT_SERVER_IMAGE}:${VAULT_SERVER_IMAGE_TAG}
    environment:
      - VAULT_HOST_URL=${VAULT_SERVER_HOST}:${VAULT_SERVER_PORT}
      - VAULT_REMOTE_KMS_URL=https://kms.trustbloc.local:${KMS_PORT}
      - VAULT_EDV_URL=https://edv.trustbloc.local:8081/encrypted-data-vaults
      - VAULT_TLS_SYSTEMCERTPOOL=true
      - VAULT_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VAULT_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - VAULT_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - VAULT_DSN=mongodb://mongodb.trustbloc.local:27017
      - VAULT_DID_DOMAIN=orb.trustbloc.local
      - VAULT_DID_METHOD=orb
      - VAULT_DID_ANCHOR_ORIGIN=https://orb.trustbloc.local
      - VAULT_REQUEST_TOKENS=sidetreeToken=tk1
    ports:
      - ${VAULT_SERVER_PORT}:${VAULT_SERVER_PORT}
    command: start
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  comparator.trustbloc.local:
    container_name: comparator.trustbloc.local
    image: ${COMPARATOR_REST_IMAGE}:${COMPARATOR_REST_IMAGE_TAG}
    environment:
      - COMPARATOR_HOST_URL=${COMPARATOR_REST_HOST}:${COMPARATOR_REST_PORT}
      - COMPARATOR_TLS_SYSTEMCERTPOOL=true
      - COMPARATOR_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - COMPARATOR_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - COMPARATOR_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - COMPARATOR_DSN=mongodb://mongodb.trustbloc.local:${MONGODB_PORT}
      - COMPARATOR_DID_DOMAIN=orb.trustbloc.local
      - COMPARATOR_CSH_URL=https://csh.trustbloc.local:8095
      - COMPARATOR_VAULT_URL=https://vault.trustbloc.local:${VAULT_SERVER_PORT}
      - COMPARATOR_DID_ANCHOR_ORIGIN=https://orb.trustbloc.local
      - COMPARATOR_REQUEST_TOKENS=sidetreeToken=tk1
    ports:
      - ${COMPARATOR_REST_PORT}:${COMPARATOR_REST_PORT}
    entrypoint: ""
    command: /bin/sh -c "sleep 5;comparator-rest start"
    depends_on:
      - csh.trustbloc.local
      - mongodb.trustbloc.local
      - orb.trustbloc.local
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  csh.trustbloc.local:
    container_name: csh.trustbloc.local
    image: ${CSH_REST_IMAGE}:${CSH_REST_IMAGE_TAG}
    environment:
      - CSH_HOST_URL=${CSH_REST_HOST}:${CSH_REST_PORT}
      - CSH_TLS_SYSTEMCERTPOOL=true
      - CSH_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - CSH_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - CSH_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - DATABASE_URL=mongodb://mongodb.trustbloc.local:${MONGODB_PORT}
      - DATABASE_PREFIX=confidentialstoragehub
      - BASE_URL=https://csh.trustbloc.local
      - TRUSTBLOC_DID_DOMAIN=orb.trustbloc.local
      - IDENTITY_DID_METHOD=orb
      - CSH_DID_ANCHOR_ORIGIN=https://orb.trustbloc.local
      - CSH_REQUEST_TOKENS=sidetreeToken=tk1
    ports:
      - ${CSH_REST_PORT}:${CSH_REST_PORT}
    command: start
    depends_on:
      - mongodb.trustbloc.local
      - orb.trustbloc.local
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  did-resolver.trustbloc.local:
    container_name: did-resolver.trustbloc.local
    image: ${DID_RESOLVER_IMAGE}:${DID_RESOLVER_IMAGE_TAG}
    environment:
      - DID_REST_HOST_URL=${DID_RESOLVER_HOST}:${DID_RESOLVER_PORT}
      - DID_REST_HOST_URL_EXTERNAL=http://did-resolver.trustbloc.local:${DID_RESOLVER_PORT}
      - DID_REST_CONFIG_FILE=/opt/did-rest/config.json
      - DID_REST_TLS_SYSTEMCERTPOOL=true
      - DID_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
    ports:
      - ${DID_RESOLVER_PORT}:${DID_RESOLVER_PORT}
    command: start
    volumes:
      - ./keys/tls:/etc/tls
      - ./did-resolver/config.json:/opt/did-rest/config.json
    networks:
      - bdd_net

  vc-issuer.trustbloc.local:
    container_name: vc-issuer.trustbloc.local
    image: ${ISSUER_VC_IMAGE}:${ISSUER_VC_IMAGE_TAG}
    environment:
      - VC_REST_HOST_URL=${ISSUER_VC_HOST}:${ISSUER_VC_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://vc-issuer.trustbloc.local:${ISSUER_VC_PORT}
      - EDV_REST_HOST_URL=https://edv.trustbloc.local:8081/encrypted-data-vaults
      - BLOC_DOMAIN=orb.trustbloc.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did-resolver.trustbloc.local:${DID_RESOLVER_PORT}/1.0/identifiers
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.trustbloc.local:${MONGODB_PORT}
      - DATABASE_PREFIX=issuer_
      - KMSSECRETS_DATABASE_TYPE=mongodb
      - KMSSECRETS_DATABASE_URL=mongodb://mongodb.trustbloc.local:${MONGODB_PORT}
      - KMSSECRETS_DATABASE_PREFIX=issuer_
      - VC_REST_MODE=issuer
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_API_TOKEN=vcs_issuer_rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token,sidetreeToken=tk1
      - VC_REST_DID_ANCHOR_ORIGIN=https://orb.trustbloc.local
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
    ports:
      - ${ISSUER_VC_PORT}:${ISSUER_VC_PORT}
    entrypoint: ""
    command: /bin/sh -c "sleep 5;vc-rest start"
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  file-server.trustbloc.local: # file server for hosting static resources (e.g. JSON-LD contexts)
    container_name: file-server.trustbloc.local
    image: halverneus/static-file-server:latest
    environment:
      - PORT=10096
      - FOLDER=/data
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "10096:10096"
    volumes:
      - ./file-server:/data
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  kms.trustbloc.local:
    container_name: kms.trustbloc.local
    image: ${KMS_SERVER_IMAGE}:${KMS_SERVER_IMAGE_TAG}
    environment:
      - KMS_HOST=0.0.0.0:${KMS_PORT}
      - KMS_BASE_URL=https://kms.trustbloc.local:${KMS_PORT}
      - KMS_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - KMS_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - KMS_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - KMS_DATABASE_TYPE=mongodb
      - KMS_DATABASE_URL=mongodb://mongodb.trustbloc.local:27017
      - KMS_DATABASE_PREFIX=kms_
      - KMS_CACHE_ENABLE=true
      - KMS_ZCAP_ENABLE=true
      - KMS_LOG_LEVEL=debug
      - KMS_SECRET_LOCK_TYPE=local
      - KMS_SECRET_LOCK_KEY_PATH=/etc/tls/secret-lock.key
      - KMS_DID_DOMAIN=orb.trustbloc.local
    ports:
      - ${KMS_PORT}:${KMS_PORT}
      - "48831:48831"
    volumes:
      - ./keys/tls:/etc/tls
    command: start
    depends_on:
      - mongodb.trustbloc.local
      - edv.trustbloc.local
    networks:
      - bdd_net

  edv.trustbloc.local:
    container_name: edv.trustbloc.local
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=0.0.0.0:8081
      - EDV_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - EDV_TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - EDV_TLS_KEY_FILE=/etc/tls/ec-key.pem
      - EDV_DATABASE_TYPE=mongodb
      - EDV_DATABASE_URL=mongodb://mongodb.trustbloc.local:27017
      - EDV_DATABASE_PREFIX=edv_
      - EDV_LOCALKMS_SECRETS_DATABASE_TYPE=mongodb
      - EDV_LOCALKMS_SECRETS_DATABASE_URL=mongodb://mongodb.trustbloc.local:27017
      - EDV_LOCALKMS_SECRETS_DATABASE_PREFIX=edv_kms_
      - EDV_EXTENSIONS=ReturnFullDocumentsOnQuery,Batch
      - EDV_DID_DOMAIN=orb.trustbloc.local
      - EDV_DATABASE_TIMEOUT=60
      - EDV_AUTH_ENABLE=true
      - EDV_LOG_LEVEL=debug
    ports:
      - "8081:8081"
    volumes:
      - ./keys/tls:/etc/tls
    command: start
    depends_on:
      - mongodb.trustbloc.local
    networks:
      - bdd_net

  orb.trustbloc.local:
    container_name: orb.trustbloc.local
    image: ${SIDETREE_MOCK_IMAGE}:${SIDETREE_MOCK_IMAGE_TAG}
    environment:
      - SIDETREE_MOCK_TLS_CERTIFICATE=/etc/sidetree/tls/ec-pubCert.pem
      - SIDETREE_MOCK_TLS_KEY=/etc/sidetree/tls/ec-key.pem
      - SIDETREE_MOCK_HOST=0.0.0.0
      - SIDETREE_MOCK_PORT=443
      - SIDETREE_MOCK_DID_NAMESPACE=did:orb
      - SIDETREE_MOCK_DID_ALIASES=did:orb:orb.trustbloc.local
      - SIDETREE_MOCK_EXTERNAL_ENDPOINT=https://orb.trustbloc.local
      - SIDETREE_MOCK_WELLKNOWN_PATH=did-orb
    ports:
      - 443:443
    volumes:
      - ./keys/tls:/etc/sidetree/tls
    networks:
      - bdd_net

  mongodb.trustbloc.local:
    container_name: mongodb.trustbloc.local
    image: ${MONGODB_IMAGE}:${MONGODB_IMAGE_TAG}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - bdd_net

  bdd-init:
    container_name: bdd-init
    image: bdd-init:latest
    volumes:
      - ./init/configure.sh:/opt/configure.sh
      - ./keys/tls:/etc/tls
    depends_on:
      - vc-issuer.trustbloc.local
      - comparator.trustbloc.local
    networks:
      - bdd_net

networks:
  bdd_net:
    driver: bridge
