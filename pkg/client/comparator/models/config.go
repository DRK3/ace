// Code generated by go-swagger; DO NOT EDIT.

// Copyright SecureKey Technologies Inc. All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Config config
//
// swagger:model Config
type Config struct {

	// The comparator's authentication key's keyID in the format of a DID URL.
	AuthKeyURL string `json:"authKeyURL,omitempty"`

	// The comparator's unique DID.
	// Required: true
	Did *string `json:"did"`

	// A JWK Set containing the primary public/private key pair.
	// Required: true
	Key interface{} `json:"key"`
}

// Validate validates this config
func (m *Config) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Config) validateDid(formats strfmt.Registry) error {

	if err := validate.Required("did", "body", m.Did); err != nil {
		return err
	}

	return nil
}

func (m *Config) validateKey(formats strfmt.Registry) error {

	if m.Key == nil {
		return errors.Required("key", "body", nil)
	}

	return nil
}

// ContextValidate validates this config based on context it is used
func (m *Config) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Config) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Config) UnmarshalBinary(b []byte) error {
	var res Config
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
