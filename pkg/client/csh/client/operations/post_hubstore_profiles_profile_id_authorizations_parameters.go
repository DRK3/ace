// Code generated by go-swagger; DO NOT EDIT.

// /*
// Copyright SecureKey Technologies Inc. All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
// */
//

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/trustbloc/ace/pkg/client/csh/models"
)

// NewPostHubstoreProfilesProfileIDAuthorizationsParams creates a new PostHubstoreProfilesProfileIDAuthorizationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostHubstoreProfilesProfileIDAuthorizationsParams() *PostHubstoreProfilesProfileIDAuthorizationsParams {
	return &PostHubstoreProfilesProfileIDAuthorizationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithTimeout creates a new PostHubstoreProfilesProfileIDAuthorizationsParams object
// with the ability to set a timeout on a request.
func NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithTimeout(timeout time.Duration) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	return &PostHubstoreProfilesProfileIDAuthorizationsParams{
		timeout: timeout,
	}
}

// NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithContext creates a new PostHubstoreProfilesProfileIDAuthorizationsParams object
// with the ability to set a context for a request.
func NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithContext(ctx context.Context) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	return &PostHubstoreProfilesProfileIDAuthorizationsParams{
		Context: ctx,
	}
}

// NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithHTTPClient creates a new PostHubstoreProfilesProfileIDAuthorizationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostHubstoreProfilesProfileIDAuthorizationsParamsWithHTTPClient(client *http.Client) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	return &PostHubstoreProfilesProfileIDAuthorizationsParams{
		HTTPClient: client,
	}
}

/* PostHubstoreProfilesProfileIDAuthorizationsParams contains all the parameters to send to the API endpoint
   for the post hubstore profiles profile ID authorizations operation.

   Typically these are written to a http.Request.
*/
type PostHubstoreProfilesProfileIDAuthorizationsParams struct {

	/* ProfileID.

	   The profile's ID.
	*/
	ProfileID string

	// Request.
	Request *models.Authorization

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post hubstore profiles profile ID authorizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithDefaults() *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post hubstore profiles profile ID authorizations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithTimeout(timeout time.Duration) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithContext(ctx context.Context) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithHTTPClient(client *http.Client) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProfileID adds the profileID to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithProfileID(profileID string) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WithRequest adds the request to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WithRequest(request *models.Authorization) *PostHubstoreProfilesProfileIDAuthorizationsParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the post hubstore profiles profile ID authorizations params
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) SetRequest(request *models.Authorization) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *PostHubstoreProfilesProfileIDAuthorizationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param profileID
	if err := r.SetPathParam("profileID", o.ProfileID); err != nil {
		return err
	}
	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
